knitr::opts_chunk$set(echo = TRUE)
install.packages("devtools")
devtools::install_github("brandonleekramer/tidyorgs")
knitr::opts_chunk$set(echo = TRUE)
install.packages("devtools")
devtools::install_github("brandonleekramer/tidyorgs")
# Install and load the RMySQL package
install.packages("RMySQL")
library(RMySQL)
# Set up the database connection parameters
db_host <- "oss-1.cij9gk1eehyr.us-east-1.rds.amazonaws.com"
db_port <- 3306
db_name <- "codegov"
db_user <- "admin"
db_password <- "OSS022323"
# Establish the database connection
db <- dbConnect(MySQL(), host = db_host, port = db_port, dbname = db_name, user = db_user, password = db_password)
# Specify the table name you want to pull in
table_name <- "codegov_users"
# Fetch the entire table into a data frame
query <- paste0("SELECT * FROM ", table_name)
data <- dbGetQuery(db, query)
# Close the database connection
dbDisconnect(db)
emails_to_orgs?
asd
?emails_to_orgs
??emails_to_orgs
user_emails_to_orgs <- data %>%
email_to_orgs(author_user_login, author_email, author_user_location, "academic")
library(dplyr)
user_emails_to_orgs <- data % |>
user_emails_to_orgs <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "academic")
library(tidyorgs)
user_emails_to_orgs <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "academic")
# github_users %>%
#   left_join(user_emails_to_orgs, by = "login") %>%
#   drop_na(country_name) %>%
#   select(email, country_name)
View(user_emails_to_orgs)
library(tidyorgs)
user_emails_to_orgs <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "academic")
user_emails_to_orgs |>
drop_na(author_user_login)
??drop_na
library(tidyr)
user_emails_to_orgs |>
drop_na(author_user_login)
View(user_emails_to_orgs)
user_emails_to_orgs <- user_emails_to_orgs |>
drop_na(author_user_login)
View(user_emails_to_orgs)
user_emails_to_orgs[user_emails_to_orgs == ""] <- NA
user_emails_to_orgs <- user_emails_to_orgs |>
drop_na(author_user_login)
View(user_emails_to_orgs)
distinct(user_emails_to_orgs)
user_emails_to_orgs |> distinct(user_emails_to_orgs)
user_emails_to_orgs <- distinct(user_emails_to_orgs)
View(user_emails_to_orgs)
user_emails_to_orgs['academic'] == 1
user_emails_to_orgs <- user_emails_to_orgs |>
mutate(academic == 1)
user_emails_to_orgs <- user_emails_to_orgs |>
mutate(academic = 1)
View(user_emails_to_orgs)
rename(user_emails_to_orgs, author_user_location = organization)
rename(user_emails_to_orgs, organization = author_user_location)
View(user_emails_to_orgs)
user_emails_to_orgs <- rename(user_emails_to_orgs, organization = author_user_location)
View(user_emails_to_orgs)
View(user_emails_to_orgs)
data %>%
left_join(user_emails_to_orgs, by = "author_user_login")
View(data)
data |>
drop_na(author_user_login)
data[data == ""] <- NA
data |>
drop_na(author_user_login)
data <- data[data == ""] <- NA
data |>
drop_na(author_user_login)
# Install and load the RMySQL package
install.packages("RMySQL")
library(RMySQL)
# Set up the database connection parameters
db_host <- "oss-1.cij9gk1eehyr.us-east-1.rds.amazonaws.com"
db_port <- 3306
db_name <- "codegov"
db_user <- "admin"
db_password <- "OSS022323"
# Establish the database connection
db <- dbConnect(MySQL(), host = db_host, port = db_port, dbname = db_name, user = db_user, password = db_password)
install.packages("RMySQL")
# Specify the table name you want to pull in
table_name <- "codegov_users"
# Fetch the entire table into a data frame
query <- paste0("SELECT * FROM ", table_name)
data <- dbGetQuery(db, query)
# Close the database connection
dbDisconnect(db)
View(data)
data[data == ""] <- NA
data |>
drop_na(author_user_login)
View(data)
data %>%
left_join(user_emails_to_orgs, by = "author_user_login")
View(data)
data <- data |>
left_join(user_emails_to_orgs, by = "author_user_login")
data <- distinct(data)
View(data)
View(data)
df_nonprofits <- data |>
df_nonprofits(author_user_login, author_email, author_user_location, "nonprofit")
df_nonprofits <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "nonprofit")
View(df_nonprofits)
classified_academic <- data %>%
detect_academic(author_user_login, author_user_company, author_email) %>%
filter(academic == 1) %>%
select(login, organization, company)
classified_businesses <- data %>%
detect_business(author_user_login, author_user_company, author_email) %>%
filter(business == 1) %>%
select(author_user_login, author_user_company)
classified_businesses <- data %>%
detect_business(author_user_login, author_user_company, author_email) %>%
filter(business == 1)
classified_businesses <- data %>%
detect_business(author_user_login, author_user_company, author_email) %>%
classified_businesses
classified_businesses <- data %>%
detect_business(author_user_login, author_user_company, author_email) %>%
classified_businesses <- data %>%
detect_business(author_user_login, author_user_company, author_email)
classified_businesses <- data %>%
detect_business(author_user_login, author_user_company, author_user_bio, author_email)
View(df_nonprofits)
df_nonprofits <- df_nonprofits |>
drop_na(author_user_login) |>
distinct(df_nonprofits) |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
View(df_nonprofits)
df_nonprofits <- df_nonprofits |>
drop_na(author_user_login) |>
distinct() |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
View(df_nonprofits)
data <- data |>
left_join(df_nonprofits, by = "author_user_login")
View(user_emails_to_orgs)
df_academic <- user_emails_to_orgs
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyr)
library(RMySQL)
library(tidyorgs)
# Set up the database connection parameters
db_host <- "oss-1.cij9gk1eehyr.us-east-1.rds.amazonaws.com"
db_port <- 3306
db_name <- "codegov"
db_user <- "admin"
db_password <- "OSS022323"
# Establish the database connection
db <- dbConnect(MySQL(), host = db_host, port = db_port, dbname = db_name, user = db_user, password = db_password)
# Specify the table name you want to pull in
table_name <- "codegov_users"
# Fetch the entire table into a data frame
query <- paste0("SELECT * FROM ", table_name)
data <- dbGetQuery(db, query)
# Close the database connection
dbDisconnect(db)
data[data == ""] <- NA
data <- data |>
drop_na(author_user_login) |>
distinct()
df_nonprofits <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "nonprofit")
df_nonprofits <- df_nonprofits |>
drop_na(author_user_login) |>
distinct() |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
df_academic <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "academic")
df_academic <- df_academic |>
drop_na(author_user_login) |>
distinct() |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
df_business <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "business")
df_business <- df_business |>
drop_na(author_user_login) |>
distinct() |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
df_government <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "government")
df_government <- df_government |>
drop_na(author_user_login) |>
distinct() |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
categorized_users <- bind_rows(df_academic, df_business, df_government, df_nonprofits)
View(categorized_users)
df_nonprofits <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "nonprofit")
df_nonprofits <- df_nonprofits |>
drop_na(author_user_login) |>
distinct() |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
df_academic <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "academic")
df_academic <- df_academic |>
drop_na(author_user_login) |>
distinct() |>
mutate(academic = 1) |>
rename(organization = author_user_location)
df_business <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "business")
df_business <- df_business |>
drop_na(author_user_login) |>
distinct() |>
mutate(business = 1) |>
rename(organization = author_user_location)
df_government <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "government")
df_government <- df_government |>
drop_na(author_user_login) |>
distinct() |>
mutate(government = 1) |>
rename(organization = author_user_location)
categorized_users <- bind_rows(df_academic, df_business, df_government, df_nonprofits)
View(categorized_users)
View(categorized_users)
data <- data |>
left_join(categorized_users, by = "author_user_login")
View(data)
data <- data |>
rename(login = author_user_login,
name = author_name
email = author_email,
data <- data |>
rename(login = author_user_login,
name = author_name,
email = author_email,
location = author_user_location,
company = author_user_company,
pronouns = author_user_pronouns,
bio = author_user_bio,
website = author_user_website,
twitter = author_user_twitter
)
dbWriteTable(con, name = "codegov_users_sectored", value = data, overwrite = TRUE)
# Set up the database connection parameters
db_host <- "oss-1.cij9gk1eehyr.us-east-1.rds.amazonaws.com"
db_port <- 3306
db_name <- "codegov"
db_user <- "admin"
db_password <- "OSS022323"
# Establish the database connection
db <- dbConnect(MySQL(), host = db_host, port = db_port, dbname = db_name, user = db_user, password = db_password)
# Push dataframe to database
dbWriteTable(db, name = "codegov_users_sectored", value = data, overwrite = TRUE)
# Close the database connection
dbDisconnect(db)
library(dplyr)
library(tidyr)
library(RMySQL)
library(tidyorgs)
# Set up the database connection parameters
db_host <- "oss-1.cij9gk1eehyr.us-east-1.rds.amazonaws.com"
db_port <- 3306
db_name <- "cran"
db_user <- "admin"
db_password <- "OSS022323"
# Establish the database connection
db <- dbConnect(MySQL(), host = db_host, port = db_port, dbname = db_name, user = db_user, password = db_password)
# Specify the table name you want to pull in
table_name <- "cran_users"
# Fetch the entire table into a data frame
query <- paste0("SELECT * FROM ", table_name)
data <- dbGetQuery(db, query)
# Close the database connection
dbDisconnect(db)
View(data)
View(data)
data[data == ""] <- NA
data <- data |>
drop_na(author_user_login) |>
distinct()
df_nonprofits <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "nonprofit")
df_nonprofits <- df_nonprofits |>
drop_na(author_user_login) |>
distinct() |>
mutate(nonprofit = 1) |>
rename(organization = author_user_location)
View(df_nonprofits)
df_academic <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "academic")
df_academic <- df_academic |>
drop_na(author_user_login) |>
distinct() |>
mutate(academic = 1) |>
rename(organization = author_user_location)
df_business <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "business")
df_business <- df_business |>
drop_na(author_user_login) |>
distinct() |>
mutate(business = 1) |>
rename(organization = author_user_location)
df_government <- data |>
email_to_orgs(author_user_login, author_email, author_user_location, "government")
df_government <- df_government |>
drop_na(author_user_login) |>
distinct() |>
mutate(government = 1) |>
rename(organization = author_user_location)
categorized_users <- bind_rows(df_academic, df_business, df_government, df_nonprofits)
data <- data |>
left_join(categorized_users, by = "author_user_login")
data <- data |>
rename(login = author_user_login,
name = author_name,
email = author_email,
location = author_user_location,
company = author_user_company,
pronouns = author_user_pronouns,
bio = author_user_bio,
website = author_user_website,
twitter = author_user_twitter
)
# Set up the database connection parameters
db_host <- "oss-1.cij9gk1eehyr.us-east-1.rds.amazonaws.com"
db_port <- 3306
db_name <- "cran"
db_user <- "admin"
db_password <- "OSS022323"
# Establish the database connection
db <- dbConnect(MySQL(), host = db_host, port = db_port, dbname = db_name, user = db_user, password = db_password)
# Push dataframe to database
dbWriteTable(db, name = "cran_users_sectored", value = data, overwrite = TRUE)
# Close the database connection
dbDisconnect(db)
install.packages('countrycode')
library(dplyr)
library(tidyr)
library(RMySQL)
library(tidyorgs)
library(countrycode)
library(dplyr)
library(tidyr)
library(RMySQL)
library(countrycode)
library('dplyr')
library('tidyr')
library('RMySQL')
library('countrycode')
# Set up the database connection parameters
db_host <- "oss-1.cij9gk1eehyr.us-east-1.rds.amazonaws.com"
db_port <- 3306
db_name <- "codegov"
db_user <- "admin"
db_password <- "OSS022323"
# Establish the database connection
db <- dbConnect(MySQL(), host = db_host, port = db_port, dbname = db_name, user = db_user, password = db_password)
# Specify the table name you want to pull in
table_name <- "codegov_users_sectored"
# Fetch the entire table into a data frame
query <- paste0("SELECT * FROM ", table_name)
data <- dbGetQuery(db, query)
# Close the database connection
dbDisconnect(db)
View(data)
library(countrycode)
df1 <- countrycode(data$location, 'country.name', 'country.name')
df2 <- data.frame(df1)
View(df2)
View(data)
library(countrycode)
df1 <- countrycode(data$location, 'country.name', 'country.name')
df2 <- df2 |>
rename(country = df1)
library(countrycode)
df1 <- countrycode(data$location, 'country.name', 'country.name')
View(df2)
df2 <- data.frame(df1) |>
rename(country = df1)
codegov_users_sectored <- bind_cols(data, df2)
country_names <- countryname_match(data$location)
library(countrycode)
country_names <- countryname_match(data$location)
install.packages("countrymatcher")
library(countrymatcher)
